version: "3.9"
services:
  app:
    build: ./app/.
    restart: always
    container_name: app
    depends_on:
      postgres:
        condition: service_healthy
      elastic:
        condition: service_healthy

  postgres:
    image: postgres:14
    restart: always
    container_name: postgres
    environment:
      POSTGRES_USER: 'postgres'
      POSTGRES_PASSWORD: 'secretpass'
      POSTGRES_DB: 'bidask'
    volumes:
      - ./postgres/scripts:/docker-entrypoint-initdb.d
      - ./postgres/postgresql.conf:/etc/postgresql/postgresql.conf
      - ./postgres/pg_hba.conf:/etc/postgresql/pg_hba.conf
    ports:
      - '5432:5432'
    healthcheck:
      test: ["CMD-SHELL", "pg_isready", "-d", "bidask"]
      interval: 10s
      timeout: 5s
      retries: 20

  pgadmin:
    image: dpage/pgadmin4:6.13
    restart: always
    container_name: pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      PGADMIN_DEFAULT_EMAIL: 'admin@example.com'
      PGADMIN_DEFAULT_PASSWORD: 'secretpass'
    ports:
      - '5050:80'
    volumes:
      - ./pgadmin/servers.json:/pgadmin4/servers.json
      - ./pgadmin/pgpass:/pgpass

  elastic:
    image: elasticsearch:7.8.1
    restart: always
    container_name: elastic
    environment:
      - discovery.type=single-node
      - node.name=elastic
      - cluster.name=docker-cluster
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - '9200:9200'
      - '9300:9300'
    healthcheck:
      test: curl -s http://elastic:9200 >/dev/null || exit 1
      interval: 10s
      timeout: 5s
      retries: 30

  kibana:
    image: kibana:7.8.1
    restart: always
    container_name: kibana
    environment:
      ELASTICSEARCH_URL: http://elastic:9200
      ELASTICSEARCH_HOSTS: http://elastic:9200
    ports:
      - '5601:5601'
    depends_on:
      - 'elastic'

